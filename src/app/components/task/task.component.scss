h1{
    font-family: 'EB Garamond', serif;
    font-size: 2.5rem;
}
h3{
    font-family: 'EB Garamond', serif;
}
p,label{
    font-family: 'EB Garamond', serif;
    color: #172B4D;
}



@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  .checkbox-wrapper-13 input[type=checkbox] {
    --active: #275EFE;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, .3);
    --border: #BBC1E1;
    --border-hover: #275EFE;
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }
  .checkbox-wrapper-13 input[type=checkbox]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
  }
  .checkbox-wrapper-13 input[type=checkbox]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
  }
  .checkbox-wrapper-13 input[type=checkbox]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }
  .checkbox-wrapper-13 input[type=checkbox]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  .checkbox-wrapper-13 input[type=checkbox]:disabled + label {
    cursor: not-allowed;
  }
  .checkbox-wrapper-13 input[type=checkbox]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  .checkbox-wrapper-13 input[type=checkbox]:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
    width: 21px;
  }
  .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
    opacity: var(--o, 0);
  }
  .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
    --o: 1;
  }
  .checkbox-wrapper-13 input[type=checkbox] + label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 4px;
  }

  .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
    border-radius: 4px;
  }
  .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
  }
  .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
    --r: 43deg;
  }
}

.checkbox-wrapper-13 * {
  box-sizing: inherit;
}
.checkbox-wrapper-13 *:before,
.checkbox-wrapper-13 *:after {
  box-sizing: inherit;
}




::ng-deep .mat-sort-header-content{
  color: #172B4D;
  font-family: 'EB Garamond', serif;
  font-weight: 700;
  font-size: large;
}

::ng-deep .mat-mdc-menu-item-text{
  @apply flex gap-2 items-center;
  svg{
      @apply mt-1 fill-[#172B4D]
  }
}

::ng-deep .mat-mdc-form-field-infix{
  padding: 0!important;
  min-height: fit-content!important;
  width: 80px!important;
  padding-top: 5px!important;
  padding-bottom: 5px!important;
}
::ng-deep .mat-mdc-form-field-subscript-wrapper{
  display: none;
}

::ng-deep .mat-mdc-select-arrow-wrapper{
  transform: translateY(0px)!important;
}

::ng-deep .mat-mdc-form-field{
  height: 100%;
}
::ng-deep .mdc-text-field{
  position: unset!important;
  will-change: unset!important;
}

::ng-deep .mat-mdc-form-field-focus-overlay{
  display: none;
}
::ng-deep .mdc-line-ripple{
  display:none;
}

::ng-deep .mat-mdc-menu-panel{
  @apply bg-gray-200
}
::ng-deep .cdk-overlay-pane{
  @apply shadow-md
}